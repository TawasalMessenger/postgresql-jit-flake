{
  inputs.nixpkgs.url = "github:nixos/nixpkgs/nixos-unstable";
  inputs.flake-utils.url = "github:numtide/flake-utils";
  outputs = { self, nixpkgs, flake-utils }:
    {
      overlay = final: prev: {
        postgresql_jit = final.callPackage ./postgresql.nix { };
        citus_jit =
          final.callPackage ./citus.nix { postgresql = final.postgresql_jit; };
      };
      nixosConfigurations.container = nixpkgs.lib.nixosSystem rec {
        system = "x86_64-linux";
        modules = [{
          boot.isContainer = true;
          services.postgresql = {
            enable = true;
            package = self.packages.${system}.default;
            settings.shared_preload_libraries = "citus";
          };
        }];
      };
    } // flake-utils.lib.eachDefaultSystem (system:
      let pkgs = nixpkgs.legacyPackages.${system};
      in {
        legacyPackages = pkgs.extend self.overlay;
        packages = {
          inherit (self.legacyPackages.${system}) postgresql_jit citus_jit;
          default = with self.packages.${system};
            postgresql_jit.withPackages (_: [ citus_jit ]);
        };
      });
}
